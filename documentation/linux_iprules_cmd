LINUX DOCUMENTATION

****************************************************************************************************************************************************************************************
IPtables vs FirewallD: IPtables is often a more viable option for IP blocking as it offers a more common-connected and organized command system for both single and multiple IP blocking

REJECT vs DROP:

REJECT: Discard packet and send error response back to sender
DROP: Silently discard packet with no error response sent

This program uses DROP to silently block malicious bot attacks, decreasing risk of re-attack
****************************************************************************************************************************************************************************************


Block a Single IP:

sudo firewall-cmd --permanent --add-rich-rule='rule family=ipv4 source address="0.0.0.0" reject'
sudo firewall-cmd --reload


Unblock a single IP:

sudo firewall-cmd --permanent --remove-rich-rule='rule family="ipv4" source address="0.0.0.0" reject'
sudo firewall-cmd --reload


Reset to Default:

sudo rm -rf /etc/firewalld/zones


Block Multiple IPs:

sudo ipset create blacklist hash:ip
ipset add blacklist 0.0.0.0
sudo iptables -I INPUT -m set --match-set blacklist src -j DROP


Verify IPtables:

sudo iptables -L INPUT -v -n --line-numbers


Delete IP list rule:

sudo iptables -D INPUT line number


Display IP list:

Ipset list


Given txt file, add all IPs within txt file to blacklist:

sudo touch ips.txt
sudo chown user:user ips.txt
sudo echo "0.0.0.0" >> ips.txt
sudo bash -c 'while read ip; do sudo ipset add blacklist $ip; done' < /home/user/ips.txt


Public IP address of Linux Remote Server:

curl ifconfig.me


IPtables block single IP:

sudo iptables -A INPUT -s 0.0.0.0 -j DROP


Reset IPtable to default:

sudo iptables -F
